# Creates our release PR
# Note that we need to use a secret other than secrets.GITHUB_TOKEN because
# other workflows that are triggered on tags do not get triggered is you are
# using the default token
# I found out from here: https://blog.orhun.dev/automated-rust-releases/
# and the github issue: https://github.com/orgs/community/discussions/25702
name: Release-plz

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - closed

jobs:
  release-plz-release:
    name: Release-plz release
    runs-on: ubuntu-latest
    # Only run when a PR with the 'release' label is merged to create the tag
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'release')
    # Used to push tags, and create releases.
    permissions:
      contents: write
    steps:
      - &checkout
        name: Checkout repository
        uses: actions/checkout@v5
        with:
          # `fetch-depth: 0` is needed to clone all the git history, which is necessary to
          # release from the latest commit of the release PR.
          fetch-depth: 0
          persist-credentials: false
      # Use your favorite way to install the Rust toolchain.
      # The action I'm using here is a popular choice.
      - &install-rust
        name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Run release-plz
        uses: release-plz/action@v0.5
        with:
          # Run `release-plz release` command.
          command: release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLZ_TOKEN }}

  # Create a PR with the new versions and changelog, preparing the next release.
  # If you want release-plz to only release your packages
  # and you want to update `Cargo.toml` versions and changelogs by yourself,
  # remove this job.
  release-plz-pr:
    name: Release-plz PR
    runs-on: ubuntu-latest
    # Only run on regular pushes, not when PRs are merged
    if: github.event_name == 'push'
    permissions:
      # Used to create and update pull requests.
      pull-requests: write
      # Used to push to the pull request branch.
      contents: write

    # The concurrency block is explained below (after the code block).
    concurrency:
      group: release-plz-${{ github.ref }}
      cancel-in-progress: false
    steps:
      # Reuse previous steps via YAML anchors.
      - *checkout
      - *install-rust
      - name: Run release-plz
        uses: release-plz/action@v0.5
        with:
          # Run `release-plz release-pr` command.
          command: release-pr
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLZ_TOKEN }}
